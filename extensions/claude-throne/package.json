{
  "name": "claude-throne",
  "displayName": "Claude Throne",
  "publisher": "thehive",
  "description": "Configure and run Claude-Throne proxy with secure credential storage and model routing.",
  "version": "1.5.0",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/KHAEntertainment/claude-throne"
  },
  "engines": {
    "vscode": "^1.85.0"
  },
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "categories": [
    "Other"
  ],
  "main": "./out/extension.js",
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "viewsContainers": {
      "panel": [
        {
          "id": "claudeThronePanel",
          "title": "Claude Throne"
        }
      ],
      "activitybar": [
        {
          "id": "claudeThrone",
          "title": "Claude Throne"
        }
      ]
    },
    "views": {
      "claudeThronePanel": [
        {
          "id": "claudeThrone.panel",
          "name": "Claude Throne",
          "type": "webview"
        }
      ],
      "claudeThrone": [
        {
          "id": "claudeThrone.activity",
          "name": "Claude Throne",
          "type": "webview"
        }
      ]
    },
    "commands": [
      {
        "command": "claudeThrone.openPanel",
        "title": "Claude Throne: Open Panel"
      },
      {
        "command": "claudeThrone.storeOpenRouterKey",
        "title": "Claude Throne: Store OpenRouter API Key"
      },
      {
        "command": "claudeThrone.storeOpenAIKey",
        "title": "Claude Throne: Store OpenAI API Key"
      },
      {
        "command": "claudeThrone.storeTogetherKey",
        "title": "Claude Throne: Store Together API Key"
      },
      {
        "command": "claudeThrone.storeDeepseekKey",
        "title": "Claude Throne: Store Deepseek API Key"
      },
      {
        "command": "claudeThrone.storeGlmKey",
        "title": "Claude Throne: Store GLM API Key"
      },
      {
        "command": "claudeThrone.storeCustomKey",
        "title": "Claude Throne: Store Custom Provider API Key"
      },
      {
        "command": "claudeThrone.storeAnyKey",
        "title": "Claude Throne: Store Provider API Key"
      },
      {
        "command": "claudeThrone.startProxy",
        "title": "Claude Throne: Start Proxy"
      },
      {
        "command": "claudeThrone.stopProxy",
        "title": "Claude Throne: Stop Proxy"
      },
      {
        "command": "claudeThrone.status",
        "title": "Claude Throne: Show Status"
      },
      {
        "command": "claudeThrone.applyToClaudeCode",
        "title": "Claude Throne: Apply Base URL to Claude Code"
      },
      {
        "command": "claudeThrone.revertApply",
        "title": "Claude Throne: Revert to Claude Defaults"
      }
    ],
    "configuration": {
      "title": "Claude Throne",
      "properties": {
        "claudeThrone.proxy.port": {
          "type": "number",
          "default": 3000,
          "minimum": 1,
          "maximum": 65535,
          "markdownDescription": "Port for the bundled proxy server. Other configuration (provider, custom URL, models) is now handled in the Claude Throne panel (View → Claude Throne)."
        },
        "claudeThrone.proxy.debug": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable DEBUG=1 for the bundled proxy. Other configuration (provider, custom URL, models) is now handled in the Claude Throne panel (View → Claude Throne)."
        },
        "claudeThrone.proxy.skipHealthCheck": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Skip health check during proxy startup for instant initialization. Enable if experiencing startup delays."
        },
        "claudeThrone.autoApply": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Automatically apply ANTHROPIC_BASE_URL to Claude Code on proxy start (and revert on Stop). Disable if you experience connection errors."
        },
        "claudeThrone.applyScope": {
          "type": "string",
          "default": "workspace",
          "enum": [
            "workspace",
            "global"
          ],
          "markdownDescription": "Scope at which to apply settings changes (workspace or global)."
        },
        "claudeThrone.customEndpointKind": {
          "type": "string",
          "default": "auto",
          "enum": [
            "auto",
            "openai",
            "anthropic"
          ],
          "markdownDescription": "Detection/override for custom endpoint type. 'openai' uses the proxy. 'anthropic' offers bypass to apply the URL directly to Claude Code."
        },
        "claudeThrone.twoModelMode": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable two-model mode to use separate models for reasoning and execution."
        },
        "claudeThrone.reasoningModel": {
          "type": "string",
          "default": "",
          "markdownDescription": "The primary/reasoning model to use."
        },
        "claudeThrone.completionModel": {
          "type": "string",
          "default": "",
          "markdownDescription": "The execution/completion model to use (when two-model mode is enabled)."
        },
        "claudeThrone.customCombos": {
          "type": "array",
          "default": [],
          "markdownDescription": "User-saved model combinations (global)."
        },
        "claudeThrone.workspaceCombos": {
          "type": "array",
          "default": [],
          "markdownDescription": "User-saved model combinations (workspace-specific)."
        },
        "claudeThrone.savedCombos": {
          "type": "array",
          "default": [],
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "reasoning": {
                "type": "string"
              },
              "completion": {
                "type": "string"
              }
            }
          },
          "scope": "window",
          "markdownDescription": "User-saved model combinations for quick access."
        },
        "claudeThrone.provider": {
          "type": "string",
          "default": "openrouter",
          "enum": [
            "openrouter",
            "openai",
            "together",
            "deepseek",
            "glm",
            "custom"
          ],
          "scope": "window",
          "markdownDescription": "AI provider to use for model routing."
        },
        "claudeThrone.customBaseUrl": {
          "type": "string",
          "default": "",
          "scope": "window",
          "markdownDescription": "Custom endpoint URL for custom provider (OpenAI-compatible API)."
        },
        "claudeThrone.anthropicDefaults": {
          "type": "object",
          "default": {},
          "properties": {
            "opus": {
              "type": "string"
            },
            "sonnet": {
              "type": "string"
            },
            "haiku": {
              "type": "string"
            }
          },
          "scope": "application",
          "markdownDescription": "Cached Anthropic default models (internal use)."
        },
        "claudeThrone.customEndpointOverrides": {
          "type": "object",
          "default": {},
          "markdownDescription": "Manual endpoint type overrides per URL (internal use)."
        }
      }
    }
  },
  "scripts": {
    "bundle:proxy": "node ./scripts/bundle-proxy.mjs",
    "vscode:prepublish": "npm run bundle:proxy && npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "vsce package"
  },
  "dependencies": {
    "undici": "^6.18.2"
  },
  "devDependencies": {
    "@types/node": "^20.12.7",
    "@types/vscode": "^1.85.0",
    "esbuild": "^0.21.5",
    "typescript": "^5.4.0",
    "vsce": "^2.15.0"
  }
}
